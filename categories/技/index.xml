<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技 on iNote</title>
    <link>/categories/%E6%8A%80/</link>
    <description>Recent content in 技 on iNote</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>blog.luvnaxx.com</copyright>
    <lastBuildDate>Tue, 15 Sep 2020 10:36:33 +0800</lastBuildDate>
    
	<atom:link href="/categories/%E6%8A%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>统一异常处理</title>
      <link>/post/%E6%8A%80/spring-boot/unified-exception-handling/</link>
      <pubDate>Tue, 15 Sep 2020 10:36:33 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/spring-boot/unified-exception-handling/</guid>
      <description>减少代码中各种异常判断 Controller入参参数校验 入参使用@NotNull、@NotBlank、@NotEmpty等校验注解。也可自定义</description>
    </item>
    
    <item>
      <title>无重复字符的最长子串</title>
      <link>/post/%E6%8A%80/datastructure_and_algorithm/leetcode/longest-substring-without-repeating-characters/</link>
      <pubDate>Wed, 29 Jul 2020 11:02:09 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/datastructure_and_algorithm/leetcode/longest-substring-without-repeating-characters/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;p&gt;输入: &amp;ldquo;abcabcbb&amp;rdquo;
输出: 3 
解释: 因为无重复字符的最长子串是 &amp;ldquo;abc&amp;rdquo;，所以其长度为 3。
示例 2:&lt;/p&gt;
&lt;p&gt;输入: &amp;ldquo;bbbbb&amp;rdquo;
输出: 1
解释: 因为无重复字符的最长子串是 &amp;ldquo;b&amp;rdquo;，所以其长度为 1。
示例 3:&lt;/p&gt;
&lt;p&gt;输入: &amp;ldquo;pwwkew&amp;rdquo;
输出: 3
解释: 因为无重复字符的最长子串是 &amp;ldquo;wke&amp;rdquo;，所以其长度为 3。
请注意，你的答案必须是 子串 的长度，&amp;ldquo;pwke&amp;rdquo; 是一个子序列，不是子串。&lt;/p&gt;
&lt;p&gt;来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/longest-substring-without-repeating-characters
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>滑动窗口法</title>
      <link>/post/%E6%8A%80/datastructure_and_algorithm/leetcode/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%B3%95/</link>
      <pubDate>Tue, 28 Jul 2020 16:12:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/datastructure_and_algorithm/leetcode/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%B3%95/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;原链接&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/61564531&#34;&gt;Leetcode刷题总结之滑动窗口法（尺取法）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不是为了抄袭，怕原链接失效，复制一份&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>两数相加</title>
      <link>/post/%E6%8A%80/datastructure_and_algorithm/leetcode/add-two-numbers/</link>
      <pubDate>Tue, 28 Jul 2020 12:44:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/datastructure_and_algorithm/leetcode/add-two-numbers/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。&lt;/p&gt;
&lt;p&gt;如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。&lt;/p&gt;
&lt;p&gt;您可以假设除了数字 0 之外，这两个数都不会以 0 开头。&lt;/p&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;p&gt;输入：(2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4)
输出：7 -&amp;gt; 0 -&amp;gt; 8
原因：342 + 465 = 807&lt;/p&gt;
&lt;p&gt;来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/add-two-numbers
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>两数之和</title>
      <link>/post/%E6%8A%80/datastructure_and_algorithm/leetcode/two-sum/</link>
      <pubDate>Tue, 28 Jul 2020 12:12:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/datastructure_and_algorithm/leetcode/two-sum/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。&lt;/p&gt;
&lt;p&gt;你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。&lt;/p&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;p&gt;给定 nums = [2, 7, 11, 15], target = 9&lt;/p&gt;
&lt;p&gt;因为 nums[0] + nums&lt;a href=&#34;https://blog-1252667810.cos.ap-shanghai.myqcloud.com/image/2020/07/5f441ab547c84b0086144b20849523df.png&#34;&gt;1&lt;/a&gt; = 2 + 7 = 9
所以返回 [0, 1]&lt;/p&gt;
&lt;p&gt;来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/two-sum
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>排序算法</title>
      <link>/post/%E6%8A%80/datastructure_and_algorithm/sort/</link>
      <pubDate>Mon, 01 Jun 2020 12:44:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/datastructure_and_algorithm/sort/</guid>
      <description>&lt;h1 id=&#34;冒泡排序选择排序插入排序希尔排序快速排序归并排序基数排序&#34;&gt;冒泡排序/选择排序/插入排序/希尔排序/快速排序/归并排序/基数排序&lt;/h1&gt;</description>
    </item>
    
    <item>
      <title>JDK8:函数式编程</title>
      <link>/post/%E6%8A%80/lambda/</link>
      <pubDate>Thu, 28 May 2020 15:44:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/lambda/</guid>
      <description>&lt;h2 id=&#34;stream&#34;&gt;stream&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;使用LongStream输出斐波那契数列&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>ConditionOnProperty注解的使用</title>
      <link>/post/%E6%8A%80/spring-boot/conditiononproperty%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 01 Apr 2020 20:43:57 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/spring-boot/conditiononproperty%E6%B3%A8%E8%A7%A3%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Spring Boot&lt;/strong&gt;通过**@ConditionalOnProperty**来控制**Configuration**是否生效&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>json字符串操作</title>
      <link>/post/%E6%8A%80/json%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 19 Jan 2020 15:22:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/json%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;p&gt;不借助实体类，对json类型的字符串修改其内容&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>读取配置文件2</title>
      <link>/post/%E6%8A%80/%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-2/</link>
      <pubDate>Mon, 13 Jan 2020 15:50:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-2/</guid>
      <description>&lt;p&gt;接着上一篇。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>读取配置文件</title>
      <link>/post/%E6%8A%80/%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-1/</link>
      <pubDate>Mon, 13 Jan 2020 15:22:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-1/</guid>
      <description>&lt;h2 id=&#34;说明&#34;&gt;说明&lt;/h2&gt;
&lt;p&gt;配置文件默认读取的是&lt;strong&gt;application.properties&lt;/strong&gt;，如需读取其他的配置文件，需要使用&lt;code&gt;@PropertySource&lt;/code&gt;注解。假设有一个配置文件&lt;strong&gt;values.properties&lt;/strong&gt;在&lt;strong&gt;resources&lt;/strong&gt;目录下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>并发编程</title>
      <link>/post/%E6%8A%80/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Thu, 09 Jan 2020 18:22:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</guid>
      <description>&lt;p&gt;待完善&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日期工具类-2</title>
      <link>/post/%E6%8A%80/%E6%97%A5%E6%9C%9F%E5%B7%A5%E5%85%B7%E7%B1%BB2/</link>
      <pubDate>Sat, 04 Jan 2020 15:22:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/%E6%97%A5%E6%9C%9F%E5%B7%A5%E5%85%B7%E7%B1%BB2/</guid>
      <description>&lt;p&gt;使用JAVA8新增LocalDate类代替SimpleDateFormat&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>日期工具类</title>
      <link>/post/%E6%8A%80/%E6%97%A5%E6%9C%9F%E5%B7%A5%E5%85%B7%E7%B1%BB/</link>
      <pubDate>Fri, 03 Jan 2020 14:58:07 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/%E6%97%A5%E6%9C%9F%E5%B7%A5%E5%85%B7%E7%B1%BB/</guid>
      <description>&lt;p&gt;一个低级工具类&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Spring Cloud] Zipkin Server无法启动的问题</title>
      <link>/post/%E6%8A%80/spring-cloud/zipkin-server/</link>
      <pubDate>Wed, 25 Dec 2019 14:50:08 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/spring-cloud/zipkin-server/</guid>
      <description>&lt;h2 id=&#34;加入-zipkin-server&#34;&gt;加入 Zipkin Server&lt;/h2&gt;
&lt;p&gt;pom.xml&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Spring Boot 2.x] Spring Boot 2.x 配置多数据源的三种方式</title>
      <link>/post/%E6%8A%80/spring-boot/multiple-data-source/</link>
      <pubDate>Sun, 22 Dec 2019 17:35:36 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/spring-boot/multiple-data-source/</guid>
      <description>&lt;p&gt;很早就想记录一下Spring Boot配置多数据的方式。但是网上找到的大多还都是Spring Boot 1.x的内容，一些东西已经不适合现在的版本了。这几天又仔细找了一找，总算把Spring Boot 2配置多数据源的几种方式实验通过了。以两个数据源为例&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Spring Boot 2.x] 集成FreeMaker、Thymeleaf模板引擎</title>
      <link>/post/%E6%8A%80/spring-boot/template-engine/</link>
      <pubDate>Sun, 22 Dec 2019 17:03:52 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/spring-boot/template-engine/</guid>
      <description>&lt;hr&gt;
&lt;h2 id=&#34;freemarker&#34;&gt;FreeMarker&lt;/h2&gt;
&lt;h4 id=&#34;代码&#34;&gt;代码&lt;/h4&gt;</description>
    </item>
    
    <item>
      <title>[Spring Boot 2.x] 使用Swagger2构建RESTful API</title>
      <link>/post/%E6%8A%80/spring-boot/swagger2/</link>
      <pubDate>Sun, 22 Dec 2019 16:02:23 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/spring-boot/swagger2/</guid>
      <description>&lt;p&gt;给项目的接口添加接口说明是一个很好的习惯。对于越来越大，越来越多的接口，维护说明是一个比较麻烦的工作；如果接口内容发生变化，还要及时更新文档，不然会造成说明与实际不符的情况。所以我们需要一个能配合程序产生API文档的小伙伴。Swagger2就是一款RESTful接口的文档在线自动生成+功能测试功能软件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Spring Boot 2.x] 使用Log4j2作为日志组件</title>
      <link>/post/%E6%8A%80/spring-boot/log4j2/</link>
      <pubDate>Sun, 22 Dec 2019 15:59:54 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/spring-boot/log4j2/</guid>
      <description>&lt;p&gt;Spring Boot默认使用LogBack作为日志工具，修改为Log4j2。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Spring Boot 2.x] 使用Druid作为项目数据源</title>
      <link>/post/%E6%8A%80/spring-boot/druid/</link>
      <pubDate>Sun, 22 Dec 2019 14:57:18 +0800</pubDate>
      
      <guid>/post/%E6%8A%80/spring-boot/druid/</guid>
      <description>&lt;p&gt;Druid是一个JDBC组件库，包括数据库连接池、SQL Parser等组件。DruidDataSource是最好的数据库连接池。具体参见 &lt;a href=&#34;https://github.com/alibaba/druid/wiki/%E9%A6%96%E9%A1%B5&#34;&gt;alibaba/druid&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>